import Image from "next/image";
import BlobV1 from "./brendet/BlobV1";
import useWindowSize from "../hooks/useWindowSize";
// import { VegianaLogo } from "../pages/brendet/vegiana";
// import { BesianaLogo } from "../pages/brendet/besiana";
// import { BonafideLogo } from "../pages/brendet/bonafide";
import BlobV2 from "./brendet/BlobV2";

const BrendetToggle3 = ({ data, text, color, logo, mini, v2 }) => {
  const size = useWindowSize();
  const isMobile = size.width < 768;

  return (
    <section className="">
      <div className={`relative w-full h-full z-40 `}>
        <div className="absolute w-screen  flex flex-col items-center justify-center">
          <div className="absolute top-[30vh] 2xl:top-[20vh] flex flex-col items-center w-full">
            {/* <div className="">
              {logo === 0 ? (
                <BesianaLogo />
              ) : logo === 1 ? (
                <VegianaLogo />
              ) : (
                <BonafideLogo />
              )}
            </div> */}
            <div
              className="text-white md:w-2/3 lg:w-1/2 2xl:w-2/3 text-center md:pt-4 lg:mt-10
          px-1 md:px-0 text-[7vw] md:text-[1.8vw] lg:text-[2.2vw] uppercase 2xl:text-[3vw] 2xl:pt-10 w-3/4"
            >
              <p>{text}</p>
            </div>
          </div>
          <svg
            width="1920"
            height="600"
            viewBox="0 0 1920 600"
            fill="red"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clip-path="url(#clip0_1_2)">
              <path
                d="M2222.51 -46.0247C2212.65 -58.0181 2206.48 -54.6524 2182.12 -77.8334C2170.03 -89.3054 2165.81 -95.5629 2163.02 -100.777C2159.08 -108.03 2151.45 -122.157 2154.25 -137.848C2157.57 -156.336 2171.83 -157.379 2177.95 -179.565C2181.27 -191.558 2180.08 -201.229 2179.23 -208.766C2175.44 -241.238 2174.58 -290.54 2179.28 -331.545C2170.84 -339.698 2162.35 -347.757 2153.73 -355.769C2122.06 -385.207 2089.4 -413.603 2055.89 -440.908C2047.5 -447.734 2039.06 -454.513 2030.58 -461.245C2028.83 -462.62 2027.02 -464.184 2025.18 -465.701C2024.32 -466.27 2023.47 -466.839 2022.76 -467.407C2005.5 -480.444 1988.11 -493.385 1970.52 -506.043C1947.63 -522.492 1924.4 -538.467 1900.99 -554.206C1804.86 -588.1 1710.39 -626.641 1613.31 -657.833C1612.22 -658.165 1611.08 -658.497 1609.99 -658.829C1558.85 -665.56 1487.98 -673.003 1421.57 -673.619C1417.88 -673.666 1399.01 -673.761 1373.51 -675.563C1359.38 -676.558 1345.35 -679.213 1331.23 -679.782C1301.08 -681.014 1271.08 -676.653 1241.03 -676.037C1171.96 -674.567 1102.9 -675.041 1033.84 -674.709C1001.65 -674.567 969.419 -674.615 937.234 -673.951C900.403 -673.192 863.668 -667.456 826.742 -672.576C817.405 -673.903 807.877 -674.757 798.444 -674.899C789.059 -675.041 778.773 -676.226 770.43 -673.003C756.542 -667.646 742.559 -668.073 728.481 -667.93C710.468 -667.741 692.456 -668.167 674.491 -668.594C619.601 -669.921 564.711 -670.016 509.869 -667.646C486.216 -666.603 462.61 -664.47 438.91 -663.711C425.637 -663.285 412.555 -663.996 399.709 -659.208C394.732 -657.359 388.333 -657.122 383.119 -658.355C378.237 -659.54 373.307 -660.393 368.377 -661.152C362.926 -660.583 357.475 -660.014 352.024 -659.398C334.391 -657.407 316.758 -655.321 299.125 -653.14C293.247 -652.382 287.369 -651.671 281.539 -650.865C286.279 -651.528 291.019 -652.145 295.759 -652.808C286.943 -651.908 278.174 -650.391 269.404 -649.111C232.906 -643.801 196.549 -637.733 160.335 -630.765C89.566 -617.065 19.4128 -599.667 -48.9865 -576.723C-65.5293 -571.177 -81.7878 -564.872 -98.2832 -559.136C-98.9942 -558.899 -99.6104 -558.662 -100.227 -558.472C-100.274 -558.472 -100.321 -558.425 -100.321 -558.425C-108.901 -554.348 -117.528 -550.414 -126.013 -546.1C-131.085 -543.54 -136.062 -540.743 -141.039 -538.041C-157.108 -505.853 -175.025 -474.945 -200.811 -450.721C-201.522 -434.745 -204.177 -418.865 -209.58 -403.126C-230.626 -341.879 -273.666 -297.982 -302.343 -241.57C-313.862 -218.911 -325.38 -196.535 -337.894 -174.777C-343.677 -157.711 -348.891 -143.916 -346.331 -121.114C-345.431 -113.15 -345.241 -118.602 -339.837 -93.4771C-328.177 -39.388 -330.215 -18.8616 -312.203 5.5993C-307.51 11.9516 -307.273 10.719 -301.727 18.2564C-292.532 30.8187 -277.6 51.1555 -276.463 76.4224C-275.325 101.357 -287.981 123.353 -303.197 149.9C-303.576 150.564 -303.908 151.133 -304.097 151.464C-312.155 160.187 -321.446 173.271 -320.403 188.488C-319.787 197.684 -315.853 201.24 -309.501 216.03C-305.709 224.847 -303.197 233.854 -299.642 248.313C-265.655 277.23 -241.765 314.443 -217.781 352.367C-215.979 354.121 -214.178 356.017 -212.377 358.15C-205.646 366.304 -203.608 372.135 -201.569 377.728C-200.669 379.15 -199.768 380.525 -198.868 381.947C-195.218 387.541 -191.473 393.087 -187.728 398.634C-180.287 405.839 -176.779 407.546 -134.497 421.815C-110.702 429.826 -86.2908 436.131 -62.9223 445.28C-61.2159 445.944 -59.1302 445.47 -57.2816 445.897C-39.8381 449.973 -16.6162 455.389 -0.5 462.5C26.1393 474.161 51.361 472.017 74.9666 474.529C103.312 477.563 121.846 479.507 147.253 476.425C179.533 472.443 192.757 464.005 208.779 473.154C217.027 477.848 223.852 485.954 239.969 490.362C244.093 491.5 248.596 493.254 256.654 492.828C271.774 492.022 287.085 489.13 301.921 490.647C340.743 494.676 379.516 491.642 418.338 492.496C429.572 492.733 440.853 494.534 451.85 496.762C459.481 498.327 466.355 498.611 474.081 496.667C485.979 493.681 498.398 492.211 509.869 499.085C516.362 503.02 522.477 499.986 528.971 498.563C537.171 496.809 546.414 493.728 553.856 495.861C572.011 501.076 589.312 498.421 606.945 494.913C620.834 492.116 634.438 488.988 648.184 497.189C652.308 499.654 659.181 498.089 664.727 497.521C699.472 494.06 734.121 489.414 768.961 487.044C819.775 483.584 870.731 481.924 921.592 479.128C935.622 478.369 949.463 480.976 963.873 477.61C974.159 475.193 986.009 480.502 997.148 480.644C1033.98 481.024 1070.81 480.502 1107.69 480.55C1136.93 480.597 1166.23 481.877 1195.43 480.787C1231.45 479.412 1250.55 478.417 1277.19 474.008C1292.64 471.448 1307.86 468.177 1331.51 467.513C1340.57 467.276 1347.3 467.561 1349.15 467.656C1367.44 468.414 1424.85 468.935 1438.35 468.935C1509.27 468.983 1540.41 455.33 1576.76 462.63C1588.61 465.001 1597.57 468.746 1606.77 472.017C1648.91 471.495 1691 470.595 1733.09 469.41C1751.63 453.055 1769.02 434.045 1792.63 434.045C1810.69 434.045 1809.93 445.138 1836.95 453.102C1862.31 460.592 1886.91 457.89 1906.01 453.007C1933.27 437.885 1893.93 461.255 1920 444C1930.91 430.253 2007.26 376.022 2033.47 360.331C2097.94 321.648 2138.61 348.859 2170.46 309.655C2174.87 304.251 2182.12 274.48 2196.72 214.94C2207.91 169.241 2213.5 146.345 2217.95 118.044C2219.33 109.321 2221.65 93.5355 2226.15 71.1129C2231.94 42.4329 2231.56 43.2863 2234.59 32.4779C2240.94 8.87024 2239.47 -25.3561 2222.51 -46.0247Z"
                fill={color}
              />
            </g>
            <defs>
              <clipPath id="clip0_1_2">
                <rect width="1920" height="600" fill="white" />
              </clipPath>
            </defs>
          </svg>
        </div>
      </div>
      <div className="h-[38vh]"></div>
      <div className="z-30">
        {data?.map((item, index) => {
          return (
            <div
              key={item.id}
              className={`relative w-full h-screen ${
                item.bottom && isMobile && "h-[120vh]"
              } ${index === 0 && ""}`}
            >
              <Image src={item.img} fill className={`object-cover`} alt="" />
              {v2 ? (
                <BlobV2
                  color={item.color}
                  header={item.header}
                  text={item.text}
                  left={item.left}
                  bottom={item.bottom}
                  fill={item.fill}
                  mini={item.mini ?? false}
                  vleraE={item.vleraE}
                  yndryat={item.yndyrat}
                  karb={item.karb}
                  prot={item.prot}
                  krip={item.krip}
                  koha={item.koha}
                  sasia={item.sasia}
                />
              ) : (
                <BlobV1
                  color={item.color}
                  header={item.header}
                  text={item.text}
                  tags={item.tags}
                  left={item.left}
                  bottom={item.bottom}
                  specific={item.specific}
                  fill={item.fill}
                  mini={item.mini ?? false}
                />
              )}
            </div>
          );
        })}
      </div>
    </section>
  );
};

export default BrendetToggle3;
